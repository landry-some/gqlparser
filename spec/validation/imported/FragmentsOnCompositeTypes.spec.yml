- name: 'Validate: Fragments on composite types/object is valid fragment type'
  rule: FragmentsOnCompositeTypes
  schema: 0
  query: |2-
          
          fragment validFragment on Dog {
            barks
          }
          
  errors: []
- name: 'Validate: Fragments on composite types/interface is valid fragment type'
  rule: FragmentsOnCompositeTypes
  schema: 0
  query: |2-
          
          fragment validFragment on Pet {
            name
          }
          
  errors: []
- name: 'Validate: Fragments on composite types/object is valid inline fragment type'
  rule: FragmentsOnCompositeTypes
  schema: 0
  query: |2-
          
          fragment validFragment on Pet {
            ... on Dog {
              barks
            }
          }
          
  errors: []
- name: 'Validate: Fragments on composite types/inline fragment without type is valid'
  rule: FragmentsOnCompositeTypes
  schema: 0
  query: |2-
          
          fragment validFragment on Pet {
            ... {
              name
            }
          }
          
  errors: []
- name: 'Validate: Fragments on composite types/union is valid fragment type'
  rule: FragmentsOnCompositeTypes
  schema: 0
  query: |2-
          
          fragment validFragment on CatOrDog {
            __typename
          }
          
  errors: []
- name: 'Validate: Fragments on composite types/scalar is invalid fragment type'
  rule: FragmentsOnCompositeTypes
  schema: 0
  query: |2-
          
          fragment scalarFragment on Boolean {
            bad
          }
          
  errors:
    - message: Fragment "scalarFragment" cannot condition on non composite type "Boolean".
      locations:
        - {line: 2, column: 34}
- name: 'Validate: Fragments on composite types/enum is invalid fragment type'
  rule: FragmentsOnCompositeTypes
  schema: 0
  query: |2-
          
          fragment scalarFragment on FurColor {
            bad
          }
          
  errors:
    - message: Fragment "scalarFragment" cannot condition on non composite type "FurColor".
      locations:
        - {line: 2, column: 34}
- name: 'Validate: Fragments on composite types/input object is invalid fragment type'
  rule: FragmentsOnCompositeTypes
  schema: 0
  query: |2-
          
          fragment inputFragment on ComplexInput {
            stringField
          }
          
  errors:
    - message: Fragment "inputFragment" cannot condition on non composite type "ComplexInput".
      locations:
        - {line: 2, column: 33}
- name: 'Validate: Fragments on composite types/scalar is invalid inline fragment type'
  rule: FragmentsOnCompositeTypes
  schema: 0
  query: |2-
          
          fragment invalidFragment on Pet {
            ... on String {
              barks
            }
          }
          
  errors:
    - message: Fragment cannot condition on non composite type "String".
      locations:
        - {line: 3, column: 16}
